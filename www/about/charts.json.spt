query_cache = website.db_qc5

[---]

currency = request.qs.get('currency', 'EUR')
if currency not in constants.CURRENCIES:
    raise response.invalid_input(currency, 'currency', 'querystring')

charts = [r._asdict() for r in query_cache.all("""\

    SELECT ts_start::date           AS date
         , nparticipants::text
         , nusers::text
         , nactive::text
         , transfer_volume
         , coalesce(week_payins, week_deposits) AS week_payins
      FROM paydays p
     WHERE stage IS NULL
  ORDER BY ts_start DESC

""")]
for c in charts:
    for k in ('transfer_volume', 'week_payins'):
        if c[k] is None:
            c[k] = Money.ZEROS[currency]
        else:
            c[k] = c[k].fuzzy_sum(currency)

response.headers[b"Access-Control-Allow-Origin"] = b"*"

response.headers[b'Cache-Control'] = b'public, max-age=600'

[---] application/json via json_dump
charts
