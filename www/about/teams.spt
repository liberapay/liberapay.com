from liberapay.exceptions import EmailAlreadyAttachedToSelf, UsernameAlreadyTaken
from liberapay.models.participant import Participant
from liberapay.utils.emails import check_email_address, normalize_email_address

[---]

if request.method == 'POST':
    user.require_write_permission()
    if user.marked_as in ('spam', 'fraud'):
        raise response.error(403, _(
            "You're not allowed to do this because your account has been flagged. "
            "Please contact support@liberapay.com if you want to know why and "
            "request that your account be unflagged."
        ))
    name = request.body['name'].strip()
    t = Participant.from_username(name)
    if t:
        if t.kind == 'group' and t.status == 'closed' and user.id == t.closed_by:
            with website.db.get_cursor() as c:
                t.update_status('active', c)
                t.add_member(user, c)
        else:
            raise UsernameAlreadyTaken(name)
    else:
        email_lang = locale.language
        team_currency = request.body.get('main_currency') or currency
        if team_currency not in constants.CURRENCIES:
            raise response.invalid_input(team_currency, 'main_currency', 'body')
        team_email = request.body.get('email')
        if team_email:
            team_email = normalize_email_address(team_email)
            email_is_attached_to_self = user.db.one("""
                SELECT true AS a
                  FROM emails
                 WHERE participant = %s
                   AND address = %s
            """, (user.id, team_email))
            if email_is_attached_to_self:
                raise EmailAlreadyAttachedToSelf(team_email)
            check_email_address(team_email)
        throttle_takes = request.body.get('throttle_takes') == 'on'
        t = user.make_team(name, team_currency, team_email, email_lang, throttle_takes)
    response.redirect('/'+t.username+'/edit')

title = _("Teams")
[---] text/html
% extends "templates/layouts/about.html"
% block content

<p>{{ _(
    "A Liberapay team coordinates donations from multiple donors to multiple "
    "donees. The donors choose how much they want to give, the team members "
    "specify how they want to share the money, and Liberapay attempts to "
    "distribute the funds accordingly."
) }}</p>

<p>{{ _(
    "A team account isn't meant to be used by the members of a single legal entity, "
    "it is designed for a group of independent individuals or organizations who "
    "work together on a common project. However, it's also okay to create a team "
    "account for a project that only has one contributor, as this allows marking "
    "a donation as being intended to support that project specifically rather "
    "than the person behind it."
) }}</p>

<p>{{ _(
    "A team account {bold}does not store money{end_bold} for later use. Every "
    "donation is distributed immediately, either to multiple members if "
    "possible, or to a single member when splitting the money isn't supported "
    "by the payment processor. Because of these payment processing limitations, "
    "the amounts received by the members can be temporarily unbalanced, "
    "especially if the team has fewer patrons than members.",
    bold='<strong>'|safe, end_bold='</strong>'|safe,
) }}</p>

<p>{{ _(
    "If Liberapay team accounts don't fit your needs, you may want to use the "
    "{link_start}Open Collective{link_end} platform instead, which allows a team "
    "to be “hosted” by a registered nonprofit. This “fiscal host” is the legal "
    "owner of the collective's funds, oversees how they're used, and usually takes "
    "a percentage of the donations to fund itself. (We're planning to implement a "
    "similar system in Liberapay, but we don't know when it will be done.)",
    link_start='<a href="https://opencollective.com/">'|safe, link_end='</a>'|safe,
) }}</p>

<h3>{{ _("Creating a team") }}</h3>

% if user.ANON
    <p>{{ _("You need to {0}sign into your own account{1} first.",
            '<a href="/sign-in?back_to=%s">'|safe % urlquote(request.line.uri),
            '</a>'|safe
    ) }}</p>
% else
<form action="" method="POST">
    <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />

    <div class="form-group">
    <input class="form-control" name="name" size=30 
           maxlength="{{ constants.USERNAME_MAX_SIZE }}"
           data-maxlength-msg="{{ _('Maximum length is {0}.', constants.USERNAME_MAX_SIZE) }}"
           placeholder="{{ _('Name of the team') }}" />
    </div>
    <div class="form-group">
    <input class="form-control" name="email" type="email" size=30
           placeholder="{{ _('Email of the team (optional)') }}" />
    </div>
    <div class="form-group">
    % from "templates/macros/currencies.html" import currency_buttons with context
    {{ currency_buttons('main_currency', currency) }}
    </div>
    <div class="form-group">
    <label>
        <input type="checkbox" name="throttle_takes" checked />
        <span>{{ _(
            "Enable {0}limits on team takes{1}",
            '<a href="/about/teams#throttling">'|safe,
            '</a>'|safe
        ) }}</span>
    </label>
    </div>
    <button class="btn btn-success">{{ _("Create") }}</button>
</form>
% endif

<h3>{{ _("Becoming a team member") }}</h3>

<p>{{ _(
    "Once you have contributed to a team's project, ask its members to invite "
    "you. Don't forget to tell them what your username is."
) }}</p>

<h3>{{ _("Sharing the money") }}</h3>

<p>{{ _(
    "Teams don't have a hierarchy, all their members are equal and set their "
    "own take."
) }}</p>

<p>{{ _(
    "You can change your takes from {0}your teams dashboard{1}. It contains "
    "tables that show the nominal takes of all members for the next and "
    "previous payday, as well as an estimate of the actual amounts of money "
    "they'll receive in the next payday.",
    '<a href="/about/me/receiving/#teams">'|safe,
    '</a>'|safe
) }}</p>

<p>{{ _(
    "The nominal takes are the raw numbers that the members input themselves, "
    "the actual takes are computed by the system: first it sums up the nominal "
    "takes, then it computes the percentage that each take represents, and "
    "finally it applies those percentages to the available income. Nominal "
    "takes also act as maximums: the actual takes are never higher than the "
    "nominal ones, even if additional income is available."
) }}</p>

<p>{{ _(
    "You may wonder why we treat nominal takes as maximums instead of simple "
    "percentages. It's because having maximums allows a team to have unused "
    "income (called “leftover”), and that is good in several ways. Firstly, it "
    "provides a “cushion” that stabilizes the income of the team's members. "
    "Secondly, it eases the integration of new members into a team, because as "
    "they increase their takes they reduce the leftover instead of affecting "
    "the income of the other members. Thirdly, it allows our software to adjust "
    "the amounts that donors actually transfer to the team's members, in a way "
    "that balances the donors' contributions over time, thus making the system "
    "more fair. Finally, it encourages donating to a team even if it has "
    "already reached its funding goal, which is good for the stability of the "
    "team's income."
) }}</p>

<h4>{{ _("Automatic takes") }}</h4>

<p>{{ _(
    "By default all team members have their take set to the special value "
    "'auto', which corresponds to an equal share of the leftover. In other "
    "words, the members who set their takes explicitly get funded first, then "
    "whatever's left is distributed in equal amounts to the members who have "
    "automatic takes."
) }}</p>

<h4 id="throttling">{{ _("Regulation of take amounts") }}</h4>

<p>{{ _(
    "When “take throttling” is enabled for a team, its members can't raise their "
    "takes higher than a maximum computed on the basis of the nominal takes at "
    "the time of the previous payday. This mechanism is meant to encourage "
    "inviting new contributors to join the team, by ensuring that they won't "
    "take a disproportionate share of the income in their first weeks."
) }}</p>

<p>{{ _(
    "The limit works like this: you can always increase your take to {amount} if "
    "it was below that, you can double your take compared to the previous week, "
    "you can raise your take to claim the team's leftover income, and you can "
    "bring your take up to the level of the median take in the previous payday. "
    "Whichever of these possibilities results in the highest amount is your "
    "maximum take for the week.",
    amount=constants.TAKE_THROTTLING_THRESHOLD[currency]
) }}</p>

<p>{{ _(
    "Takes are not limited if the team has only one member, or if the previous "
    "week's takes were all zero (which is the case for any new team that has "
    "been created after the most recent payday)."
) }}</p>

<p>{{ _(
    "Please contact support if you want to enable or disable the take limits "
    "for an existing team. Don't forget to include evidence that the change "
    "has been approved by the other team members."
) }}</p>

<h3>{{ _("Removing team membership") }}</h3>

<p>{{ _(
    "You can leave a team from {0}your teams dashboard{1}.",
    '<a href="/about/me/receiving/#teams">'|safe,
    '</a>'|safe
) }}</p>

<p>{{ _(
    "Kicking a member out of a team is not implemented yet. Please contact "
    "support with evidence that the member needs to be kicked out and that "
    "there is consensus on that among the other members."
) }}</p>

<h3>{{ _("Closing a team account") }}</h3>

<p>{{ _(
    "A team account is automatically closed when its last member leaves."
) }}</p>

% endblock
