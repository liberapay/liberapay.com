# coding: utf8

liberapay_hof_raw = """
EdOverflow
https://github.com/liberapay/liberapay.com/pull/467
"""

gratipay_hof_raw = """\
Sergey Bobrov https://twitter.com/Black2Fan
https://github.com/gratipay/security-flh0cu/issues/1

BALAJI P R https://www.linkedin.com/in/balagpy
https://github.com/gratipay/security-2a443f/issues/1

BALAJI P R https://www.linkedin.com/in/balagpy
https://github.com/gratipay/security-f4b75c/issues/1

benhc123
https://github.com/gratipay/gratipay.com/issues/2978

Drew Callahan https://www.linkedin.com/pub/drew-callahan/67/62/783
https://github.com/gratipay/security-00001/issues/1

Nitin Goplani http://in.linkedin.com/in/nitingoplani
https://github.com/gratipay/gratipay.com/issues/2235

danishtariq
https://github.com/gratipay/gratipay.com/issues/1536

kudu adamziaja http://adamziaja.com
https://github.com/gratipay/gratipay.com/issues/1460

@Brkay_Aydin
https://twitter.com/Brkay_Aydin/status/377611459942817792

greggles
https://github.com/gratipay/gratipay.com/commit/addbbda0eab0efa2d45272c99e689f7

@kamilsevi
https://github.com/gratipay/gratipay.com/issues/1042

dstufft
https://twitter.com/dstufft/status/319607503061131266

wilkie buttscicles
https://github.com/gratipay/gratipay.com/issues/722

d0ugal jacobian spookylukey
https://github.com/gratipay/gratipay.com/issues/88
"""

parse_twitter = lambda x: [(x, 'https://twitter.com/' + x[1:])]
parse_github = lambda x: [(y, 'https://github.com/' + y) for y in x.split()]
parse_link = lambda x: [x.rsplit(None, 1)]
new_rec = lambda: [[], None]

def parse_hof(raw):
    hof = [new_rec()]
    for line in raw.strip().splitlines():
        if not line:
            hof.append(new_rec())
        elif line.startswith('http'):
            hof[-1][1] = line
        elif line.startswith('@'):
            hof[-1][0] = parse_twitter(line)
        elif ' http' in line:
            hof[-1][0] = parse_link(line)
        else:
            hof[-1][0] = parse_github(line)
    return hof

gratipay_hof = parse_hof(gratipay_hof_raw)
liberapay_hof = parse_hof(liberapay_hof_raw)

[---]
title = _("Security")
[---] text/html
% extends "templates/about.html"
% block content

    <p>If you have found a security issue, and it's not <a href="https://github.com/liberapay/liberapay.com/issues?q=is%3Aissue+is%3Aopen+label%3ASelf-defense">already known</a>, then please send a report to <a data-email-reveal="admin&amp;#64;liberapay.com">[click to see email address]</a>.</p>

    <h3>Policy</h3>

    <p>We will investigate legitimate reports and make every effort to quickly resolve any vulnerability. To encourage responsible reporting, we will not take legal action against you nor ask law enforcement to investigate you provided you make a good faith effort to <b>avoid causing harm to us, our users, and anyone else</b>. This includes avoiding privacy violations, destruction of data, and interruption or degradation of services.</li>

    <h4>Scope</h4>

    <p>The following <b>test types</b> are excluded from the scope:</p>

    <ul>
        <li><b>flooding</b> (e.g. denial of service attempts, unthrottled vulnerability scans)</li>
        <li><b>physical testing</b> such as office access (e.g. open doors, tailgating)</li>
        <li><b>social engineering</b> (e.g. phishing, vishing)</li>
    </ul>

    <p>The following <b>issue types</b> are excluded from scope:</p>

    <ul>
        <li><b>Low severity issues</b>, including:
            <ul>
                <li>Issues that can be detected with tools such as Hardenize and Security Headers. Liberapay runs regular scans with these services and try to improve our score gradually.</li>
                <li>Content injection issues.</li>
                <li>Cross-site Request Forgery (CSRF) with minimal security implications (Logout CSRF, etc.). In order for CSRF to be a valid issue it must affect some important action such as deleting one's account.</li>
                <li>Missing cookie flags on non-security-sensitive cookies.</li>
            </ul>
        </li>
        <li><b>Disclosure of non-sensitive info</b>. Our software is libre software, and Liberapay does not believe in security through obscurity.
            <ul>
                <li>Stack traces containing only public info.</li>
                <li>Banner grabbing issues (figuring out what web server we use, etc.).</li>
            </ul>
        </li>
        <li><b>Theoretical issues</b> without an accompanying proof-of-concept demonstrating vulnerability, including:
            <ul>
                <li><code>Host</code> header issues</li>
                <li>open ports</li>
                <li>out-of-date software</li>
            </ul>
        </li>
        <li><b>Issues with no security implications</b> (e.g. spelling mistakes), they should be reported publicly <a href="https://github.com/liberapay/liberapay.com/issues/new">on GitHub</a>.</li>
        <li><b>Issues in third-party services</b>, they should be reported to the respective team.</p>
    </ul>

    <p>Liberapay encourages hackers to read <a href="https://leanpub.com/web-hacking-101">Web Hacking 101</a> and <a href="https://leanpub.com/ltr101-breaking-into-infosec">Breaking into Information Security: Learning the Ropes 
101</a> to get a good idea of the type of issues we are looking for.</p>

    <p>Liberapay may modify the above guidelines at any time. Last update: January 18, 2018.</p>

    <h3>Hall of Fame</h3>

    % macro show_hof(hof)
    <ol>
        % for researchers, link in hof
        <li>
        % for handle, href in researchers
            <a href="{{ href }}">{{ handle }}</a>{% if not loop.last %}{% if loop.revindex0 == 1 %} &amp; {% else %}, {% endif %}{% endif %}
        % endfor
        &mdash; <a href="{{ link }}">{{ link }}</a>
        </li>
        % endfor
    </ol>
    % endmacro

    <p>Thanks to the following researchers (most recent first) for having
    reported security issues to us per email:</p>

    {{ show_hof(liberapay_hof) }}

    <p>Thanks to all hackers who have disclosed security issues to Gratipay
    <a href="https://hackerone.com/gratipay">on Hackerone</a>, some of which
    also applied to Liberapay.</p>

    <p>Thanks to the following people (most recent first) for having alerted
    Gratipay about security issues through other means:</p>

    {{ show_hof(gratipay_hof) }}

% endblock
