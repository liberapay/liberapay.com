from liberapay.exceptions import LoginRequired
from liberapay.models.account_elsewhere import AccountElsewhere
from liberapay.models.participant import Participant

[--------]

if user.ANON:
    raise LoginRequired

account_id, p_id = request.qs.get_int('id'), request.qs.get_int('p_id', None)
account = AccountElsewhere.from_id(account_id, _raise=False)
if not account:
    raise response.invalid_input(account_id, 'id', 'querystring')
cookie_name = 'connect_%s' % account_id
token = request.headers.cookie.get(cookie_name)
if not token or not account.check_connect_token(token.value):
    raise response.invalid_input(token, cookie_name, 'cookies')

p = Participant.from_id(p_id, _raise=False) if p_id else user
if not p:
    raise response.invalid_input(p_id, 'p_id', 'querystring')

other = account.participant
user_accounts = p.get_accounts_elsewhere()
other_accounts = other.get_accounts_elsewhere()

title = _("Please Confirm")

[--------]
% from 'templates/macros/elsewhere.html' import platform_icon

% extends "templates/layouts/base.html"
% block content
<div class="on-confirm">

    <p>{{ platform_icon(account.platform_data) }}
    {{ _("{0} is connected to {1} on Liberapay. Transfer it?",
         '<span class="highlight">%s</span>'|safe % account.friendly_name,
         ('<a href="/{0}/">{0}</a>'|safe).format(other.username)) }}
    </p>

    <h4>{{ _("How the accounts are now") }}</h4>

    <div class="row">
        <div class="col-sm-4">
            <b>{{ p.username }}</b><br />
            % for account in user_accounts
                {{ platform_icon(account.platform_data) }}
                <span class="sr-only">{{ account.platform_data.display_name }}:</span>
                {{ account.friendly_name }}<br />
            % else
                <p class="text-muted">{{ _("No connected accounts.") }}</p>
            % endfor
        </div>
        <div class="col-sm-4 other">
            <b>{{ other.username }}</b><br />
            % for other_account in other_accounts
                {{ platform_icon(other_account.platform_data) }}
                <span class="sr-only">{{ other_account.platform_data.display_name }}:</span>
                <span class="{{ 'highlight' if other_account.platform == account.platform else '' }}">{{
                    other_account.friendly_name
                }}</span><br />
            % endfor
        </div>
    </div>


    <h4>{{ _("How the accounts will be after the transfer") }}</h4>

    <div class="row">
        <div class="col-sm-4">
            <b>{{ p.username }}</b><br />
            % for user_account in user_accounts
                <span class="account-elsewhere">
                    {{ platform_icon(user_account.platform_data) }}
                    <span class="sr-only">{{ user_account.platform_data.display_name }}:</span>
                    {{ user_account.friendly_name }}<br />
                </span>
            % endfor

            <span class="account-elsewhere">
                {{ platform_icon(account.platform_data) }}
                <span class="sr-only">{{ account.platform_data.display_name }}:</span>
                <span class="highlight">
                    {{ account.friendly_name }}<br />
                </span>
            </span>
        </div>
        <div class="col-sm-4 other">
            <b>{{ other.username }}</b><br />
            % for other_account in other_accounts
                % if other_account.platform != account.platform
                    <span class="account-elsewhere">
                        {{ platform_icon(other_account.platform_data) }}
                        <span class="sr-only">{{ other_account.platform_data.display_name }}:</span>
                        {{ other_account.friendly_name }}<br />
                    </span>
                % endif
            % endfor
        </div>
    </div>


    <hr>
    <form action="/on/take-over.html" method="POST">
        <input type="hidden" name="account_id" value="{{ account_id }}" />
        <input type="hidden" name="p_id" value="{{ p.id }}" />
        <input type="hidden" name="then" value="{{ request.qs.get('then', '') }}" />
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <button name="should_transfer" value="yes" class="btn btn-success">{{ _("Transfer the account") }}</button>
        <button name="should_transfer" value="no" class="btn btn-default" >{{ _("Cancel") }}</button>
    </form>

</div>
% endblock
