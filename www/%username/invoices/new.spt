# coding: utf8

from pando import json

from liberapay.constants import INVOICE_DOC_MAX_SIZE, INVOICE_DOCS_EXTS
from liberapay.exceptions import AuthRequired
from liberapay.utils import get_participant

ALLOWED_EXTENSIONS_STR = ', '.join(INVOICE_DOCS_EXTS)
MAX_SIZE_MB = int(INVOICE_DOC_MAX_SIZE / 1000000)

[---]

addressee = get_participant(state, restrict=False)

if user.ANON:
    raise AuthRequired

if not user.can_invoice(addressee):
    raise response.error(403, _("You are not allowed to invoice {0}.", addressee.username))

invoice_id = request.qs.get('id')
if invoice_id:
    invoice = website.db.one("""
        SELECT *
          FROM invoices
         WHERE id = %s
           AND sender = %s
    """, (invoice_id, user.id))
    if not invoice:
        raise response.invalid_input(invoice_id, 'id', 'querystring')
    if invoice.status != 'pre':
        raise response.error(409, "This invoice has already been submitted.")
    already_uploaded = [
        {
            'name': name.replace('%20', ' '),
            'uuid': name,
            's3Key': 'invoice_docs/%s/%s' % (invoice.id, name),
        }
        for name, attrs in invoice.documents.items() if attrs['status'] == 'uploaded'
    ]
else:
    invoice = None

if request.method == 'POST':
    body = request.body
    invoice_nature = body['nature']
    if invoice_nature != 'expense':
        raise response.invalid_input(invoice_nature, 'nature', 'body')
    currency = body['currency']
    if currency not in constants.CURRENCIES:
        raise response.invalid_input(currency, 'currency', 'body')
    amount = locale.parse_money_amount(body['amount'], currency)
    if amount <= 0:
        raise response.error(400, "`amount` must be greater than 0")
    description = body['description'].strip()
    if len(description) < 5:
        raise response.error(400, _("The description is too short."))
    if len(description) > 256:
        raise response.error(400, _("The description is too long."))
    details = body.get('details')
    if len(details) > 4096:
        raise response.error(400, _("The details are too long."))
    if invoice:
        invoice_id = website.db.one("""
            UPDATE invoices
               SET nature = %s
                 , amount = %s
                 , description = %s
                 , details = %s
             WHERE id = %s
               AND status = 'pre'
         RETURNING id
        """, (invoice_nature, amount, description, details, invoice.id))
        if not invoice_id:
            response.invalid_input(invoice_id, 'id', 'querystring')
    else:
        invoice_id = website.db.one("""
            INSERT INTO invoices
                        (sender, addressee, nature, amount, description, details, documents, status)
                 VALUES (%s, %s, %s, %s, %s, %s, '{}'::jsonb, 'pre')
              RETURNING id
        """, (user.id, addressee.id, invoice_nature, amount, description, details))
    raise response.json({'invoice_id': invoice_id})

title = _("Invoice {someone}", someone=addressee.username)

[---] text/html
% from "templates/currencies.html" import currency_buttons with context

% extends "templates/base.html"

% block content

<noscript class="alert alert-danger">{{ _("JavaScript is required") }}</noscript>

<form action="javascript:" method="POST" id="invoice-form"
      data-base-path="{{ addressee.path('invoices/') }}"
      data-s3-endpoint="{{ website.app_conf.s3_endpoint }}"
      data-s3-access-key="{{ website.app_conf.s3_public_access_key }}"
      data-s3-region="{{ website.app_conf.s3_region }}"
      data-allowed-extensions="{{ ALLOWED_EXTENSIONS_STR }}"
      data-item-limit="{{ constants.INVOICE_DOCS_LIMIT }}"
      data-max-size="{{ constants.INVOICE_DOC_MAX_SIZE }}"
      data-already-uploaded="{{ json.dumps(already_uploaded or []) }}"
      >
    <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
    <input type="hidden" name="currency" value="{{ currency }}" />

    <h4>{{ _("Nature") }}</h4>
    <select class="form-control" name="nature">
    % for value, label in constants.INVOICE_NATURES.items()
        <option value="{{ value }}" {{ 'selected' if value == invoice.nature }}>{{ _(label) }}</option>
    % endfor
    </select>
    <p class="help-block">{{ _("(Liberapay only supports one kind of invoice for now.)") }}</p>

    <h4>{{ _("Amount") }}</h4>
    <div class="form-group form-inline">
        <input type="tel" inputmode="decimal" name="amount" class="amount form-control"
               placeholder="{{ _('Amount') }}" required
               value="{{ locale.format_decimal(invoice.amount.amount) if invoice else '' }}" />
        &nbsp;&nbsp;
        {{ currency_buttons('currency', currency) }}
    </div>

    <h4>{{ _("Description") }}</h4>
    <input type="text" name="description" class="form-control"
           placeholder="{{ _('A short description of the invoice') }}"
           required minlength=5 maxlength=256
           value="{{ invoice.description or '' }}" />

    <h4>{{ _("Details (optional)") }}</h4>
    <textarea name="details" class="form-control" rows=4
              placeholder="{{ _('Details of the invoice (e.g. the breakdown of the amount into its components)') }}"
              maxlength=4096>{{ invoice.details or '' }}</textarea>
    <p class="help-block">
        {{ _("Markdown supported.") }}
        <a href="https://daringfireball.net/projects/markdown/basics"
           target="_blank" rel="noopener noreferrer">{{ _("What is Markdown?") }}</a>
    </p>

    <h4>{{ _("Documents (private)") }}</h4>
    <p>{{ _("A reimbursement request is more likely to be accepted if you provide proof that the expense actually happened.") }}</p>
    <p>{{ _("Only the administrators of {0} will be able to download these files.", addressee.username) }}</p>
    <p>{{ _("Allowed file extensions: {0}. Maximum file size: {1}MB.", ALLOWED_EXTENSIONS_STR, MAX_SIZE_MB) }}</p>
    % from "templates/fine-uploader.html" import fine_uploader with context
    {{ fine_uploader() }}
    <br>
    <p class="alert alert-warning">{{ _("We will not store these documents forever, archiving them for the long term is your responsibility.") }}</p>

    <br>
    <button class="btn btn-lg btn-success">{{ _("Go") }}</button>

</form>

% endblock

% block scripts
<script src="{{ website.asset('fine-uploader/all.fine-uploader.min.js') }}"></script>
% endblock
