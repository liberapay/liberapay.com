# coding: utf8

from liberapay.utils import b64decode_s, get_participant, group_by, utcnow

allow_bankwire = website.app_conf.payin_methods.get('mango-bw', True)
allow_card = website.app_conf.payin_methods.get('mango-cc', True)
allow_directdebit = website.app_conf.payin_methods.get('mango-ba', True)

[---]

participant = get_participant(state, restrict=True, block_suspended_user=True)

website.check_payin_allowed(request, user)

if not allow_bankwire and not allow_card and not allow_directdebit:
    response.redirect(participant.path('giving/pay/'))

if 'transactionId' in request.qs or 'exchange_id' in request.qs or \
    request.method == 'POST':
    # For backward compatibility
    response.redirect(
        participant.path('wallet/payin/card/'+request.path['back_to']),
        code=307
    )

selected_currency = request.qs.get('currency')
if selected_currency and selected_currency not in constants.CURRENCIES:
    raise response.invalid_input(selected_currency, 'currency', 'querystring')

currencies = website.db.all("""
    SELECT DISTINCT amount::currency
      FROM current_tips
     WHERE tipper = %s
       AND renewal_mode > 0
""", (participant.id,))
n_currencies = len(currencies)
pending_payins = website.db.all("""
    SELECT e.*, r.network
      FROM exchanges e
      JOIN exchange_routes r ON r.id = e.route
     WHERE e.participant = %s
       AND e.amount > 0
       AND e.status = 'created'
""", (participant.id,))
pending_payins = group_by(pending_payins, lambda r: r.amount.currency)
sections = []
show_footer = False
for currency in currencies:
    if selected_currency and currency != selected_currency:
        continue
    balance = participant.get_balance_in(currency)
    donations = participant.get_giving_in(currency)
    receiving = participant.get_receiving_in(currency)
    weekly = donations - receiving
    funded = balance // weekly if weekly > 0 else float('inf')
    can_payin = weekly > 0 and funded < 52
    sections.append((currency, balance, donations, receiving, weekly, funded, can_payin))
    show_footer |= can_payin

currency = None
del currency

back_to = b64decode_s(request.path['back_to'], default='')

if user == participant:
    participant.mark_notifications_as_read('low_balance')

title = _("Adding Money")

[---] text/html
% extends "templates/base-thin.html"

% block thin_content

% for currency, balance, donations, receiving, weekly, funded, can_payin in sections

    % set currency_name = locale.currencies.get(currency, currency)
    % if n_currencies > 1
    <h4>{{ locale.title(currency_name) }} ({{ locale.currency_symbols.get(currency, currency) }})</h4>
    % endif

    <p>
        % if weekly <= 0
            {{ _("Your donations are funded by your income: you receive {income} and give back {donations_amount} (per week).",
                 income=receiving, donations_amount=donations) if n_currencies == 1 else
               _("Your donations in {currency} are funded by your income: you receive {income} and give back {donations_amount} (per week).",
                 currency=currency_name, income=receiving, donations_amount=donations) }}
            </p><p>
            {{ _(
                "We don't allow adding money when your donations are already "
                "funded by your income. If this is a problem for you please "
                "send an email to support@liberapay.com explaining why."
            ) }}
        % elif funded > 0
            {{ ngettext("Your donations are only funded for another week.",
                        "Your donations are funded for another {n} weeks.",
                        funded) if n_currencies == 1 else
               ngettext("Your donations in {currency} are only funded for another week.",
                        "Your donations in {currency} are funded for another {n} weeks.",
                        funded, currency=currency_name) }}
        % else
            {{ _("You need to transfer money to your wallet to fund your donations.")
               if n_currencies == 1 else
               _("You need to transfer money to your wallet to fund your donations in {currency}.",
                 currency=currency_name) }}
        % endif
    </p>

    % for e in pending_payins[currency]
        <p class="alert alert-info">{{ _(
            "You have a pending {payment_method} payment for {money_amount}. "
            "{link_open}Details{link_close}",
            payment_method=_(constants.PAYMENT_METHODS.get(e.network, e.network)).lower(),
            money_amount=e.amount,
            link_open='<a href="%s">'|safe % participant.get_payin_url(e.network, e.id),
            link_close='</a>'|safe
        ) }}</p>
    % endfor

    % if can_payin

    <p>{{ _("Please choose a payment method to add money:") }}</p>

    <div class="row payment-methods">
    % from "templates/icons.html" import fontawesome
    % set base_path = participant.path('wallet/payin')
    % set direct_debit_available = currency in constants.FEE_PAYIN_DIRECT_DEBIT

        <div class="col-sm-6">
            <div class="panel panel-default {{ '' if allow_card else 'muted' }}">
            <div class="panel-body {{ 'overlaid' if allow_card else '' }}">
                <p class="payment-icon">{{ fontawesome('credit-card-alt') }}</p>
                <h4>{{ _("Credit/Debit Card") }}<br>
                    % if allow_card
                    <small>Visa / Mastercard / CB</small>
                    % else
                    <small class="text-danger">{{ _("Currently unavailable") }}</small>
                    % endif
                </h4>
                <p>
                    {{ _("Easy and instantaneous") }}<br>
                    {{ _("Fees: {0}% + {1}", *constants.FEE_PAYIN_CARD[currency].with_vat) }}
                </p>
                <a class="overlay" href="{{ base_path }}/card/{{ b64encode_s(back_to) }}?currency={{ currency }}"></a>
            </div></div>
        </div>

        <div class="col-sm-6">
            <div class="panel panel-default {{ '' if allow_bankwire else 'muted' }}">
            <div class="panel-body {{ 'overlaid' if allow_bankwire else '' }}">
                <p class="payment-icon">{{ fontawesome('bank') }}</p>
                <h4>{{ _("Bank Wire") }}<br>
                    % if allow_bankwire
                    <small>{{ _("To an account in Europe") }}</small>
                    % else
                    <small class="text-danger">{{ _("Currently unavailable") }}</small>
                    % endif
                </h4>
                <p>
                    {{ _("Cheapest for small amounts¹") if direct_debit_available else
                       _("Cheaper¹ but cumbersome") }}<br>
                    {{ _("Fee: {0}%", constants.FEE_PAYIN_BANK_WIRE.with_vat) }}
                </p>
                <a class="overlay" href="{{ base_path }}/bankwire/{{ b64encode_s(back_to) }}?currency={{ currency }}"></a>
            </div>
            </div>
        </div>

        % if direct_debit_available
        % set recommended = request.country in constants.PAYIN_DIRECT_DEBIT_COUNTRIES[currency]
        <div class="col-sm-6">
            <div class="panel panel-default {{ '' if recommended and allow_directdebit else 'muted' }}">
            <div class="panel-body {{ 'overlaid' if allow_directdebit else '' }}">
                <p class="payment-icon">{{ fontawesome('exchange') }}</p>
                <h4>{{ _("Direct Debit") }}<br>
                    % if allow_directdebit
                    <small class="{{ '' if recommended else 'text-warning' }}">{{ _("Euro bank accounts only") }}</small>
                    % else
                    <small class="text-danger">{{ _("Currently unavailable") }}</small>
                    % endif
                </h4>
                <p>
                    {{ _("Best for regular payments") }}<br>
                    {{ _("Fee: {0}", constants.FEE_PAYIN_DIRECT_DEBIT[currency].with_vat) }}
                </p>
                <a class="overlay" href="{{ base_path }}/direct-debit/?currency={{ currency }}"></a>
            </div>
            </div>
        </div>
        % endif

    </div>

    % endif

    <br>

% else

    <p>{{ _(
        "You haven't set up any donations yet, once you do you'll be "
        "prompted to add money to your account."
    ) }}</p>
    % from "templates/buttons.html" import find_donees with context
    {{ find_donees() }}

% endfor

% if show_footer
    % if n_currencies > 1
        <h4>{{ _("About Fees") }}</h4>
    % endif
    <p>{{ _(
        "The fees are those of our payment processors, Liberapay is only funded "
        "by the donations to {0}its own account{1}.",
        '<a href="/Liberapay/">'|safe, '</a>'|safe
    ) }}</p>

    <p>{{ _(
        "¹ Unless your bank also charges you for the transfer. We have no control "
        "or visibility over that."
    ) }}</p>

<p class="powered-by">
    <a href="https://www.mangopay.com/legal-notices/">
        <img src="{{ website.asset('mangopay/powered-by-mangopay.png') }}" class="contain" />
    </a>
</p>
% endif

% endblock
