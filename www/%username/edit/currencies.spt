# coding: utf8

from liberapay.utils import form_post_success, get_participant

[---]
participant = get_participant(state, restrict=True, allow_member=True)

if request.method == 'POST':
    body = request.body
    new_currency = body['main_currency']
    old_currency = participant.main_currency
    change_currency = new_currency != old_currency
    if body.get('accepted_currencies') == '*':
        new_accepted = None
    else:
        new_accepted = [c for c in constants.CURRENCIES if body.get('accepted_currencies:' + c) == 'yes']
        if new_currency not in new_accepted:
            raise response.error(400, _("The submitted settings are incoherent."))
        new_accepted = ','.join(new_accepted)
    change_policy = new_accepted != participant.accepted_currencies
    if new_accepted is not None and (change_currency or change_policy):
        foreign_donations = website.db.all("""
            SELECT t.*
              FROM current_tips t
             WHERE t.tippee = %s
               AND t.is_funded
               AND t.amount::currency NOT IN %s
        """, (participant.id, tuple(new_accepted.split(','))))
        if foreign_donations and body.get('confirmed') != 'true':
            back_to = participant.path('edit/currencies')
            total = Money.sum((t.amount.convert(new_currency) for t in foreign_donations), new_currency)
            msg = _(
                "You currently receive the equivalent of {money_amount} per week from donations in "
                "foreign currencies. These donations will not be converted to your main currency.",
                money_amount=total
            )
            raise response.render('templates/confirm.spt', state, cls='info', msg=msg, back_to=back_to)
    if change_currency:
        participant.change_main_currency(new_currency, user)
    if change_policy:
        website.db.run("""
            UPDATE participants
               SET accepted_currencies = %s
             WHERE id = %s
        """, (new_accepted, participant.id))
        participant.set_attributes(accepted_currencies=new_accepted)
        participant.__dict__.pop('accepted_currencies_set', None)
    form_post_success(state)

accept_all = participant.accepted_currencies is None

title = participant.username
subhead = _("Currencies")

[---] text/html
% from "templates/icons.html" import glyphicon

% extends "templates/profile-edit.html"

% block form

<form action="" method="POST">
    <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />

    <p>{{ _("Which currencies should your donors be allowed to send you, and which one do you prefer?") }}</p>
    <table class="table table-condensed">
    <tr>
        <td colspan="3"><label>
            <input type="checkbox" name="accepted_currencies" value="*"
                   {{ 'checked' if accept_all else '' }} />
            {{ _("Accept all currencies, including any that we may add in the future.") }}
        </label></td>
    % for c in constants.CURRENCIES
    <tr>
        <td>
        {{ locale.title(locale.currencies.get(c, c)) }}
                ({{ locale.currency_symbols.get(c, c) }})
        % if c not in constants.PAYPAL_CURRENCIES
            <small class="text-warning">({{ _("not supported by PayPal") }})</small>
        % endif
        </td>
        <td><label>
            <input type="checkbox" name="accepted_currencies:{{ c }}" value="yes"
                   {{ 'checked' if accept_all or c in participant.accepted_currencies_set else '' }} />
            {{ _("accept") }}
        </label></td>
        <td><label>
            <input type="radio" name="main_currency" value="{{ c }}"
                   {{ 'checked' if c == participant.main_currency else '' }} />
            {{ _("prefer") }}
        </label></td>
    </tr>
    % endfor
    </table>

    <p class="text-info">{{ glyphicon('info-sign') }} {{ _(
        "Accepting foreign currencies can increase your income by convincing "
        "people in other countries to donate to you, but international payments "
        "usually result in a higher percentage of fees, and fluctuations in "
        "exchange rates can lessen the stability of your income."
    ) }}</p>

    <p class="text-warning">{{ glyphicon('info-sign') }} {{ _(
        "Stripe automatically converts funds into your main currency, but by "
        "default PayPal holds payments in foreign currencies until you tell it "
        "what to do. If you have a Business PayPal account you can choose to "
        "automatically convert all incoming payments in foreign currencies to "
        "your main currency. This option is currently located in the "
        "“{link_open}Preferences for receiving payments{link_close}” page.",
        link_open='<a href="https://www.paypal.com/businessmanage/preferences/payments"'
                    ' target="_blank" rel="noopener noreferrer">'|safe,
        link_close='</a>'|safe
    ) }}</p>

    <br>
    <button class="save btn btn-lg btn-success">{{ _("Save") }}</button>
</form>

% endblock
