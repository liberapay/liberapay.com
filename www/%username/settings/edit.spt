from liberapay.exceptions import TooManyAttempts
from liberapay.models.participant import Participant
from liberapay.utils import form_post_success, get_participant

[---]

request.allow('POST')

body = request.body

p = get_participant(state, restrict=True, allow_member=True)

if 'new-password' in body:
    if not p.is_person:
        raise response.error(403)

    # Check the old password, if necessary
    if p.session_type == 'em':
        pass  # user logged in via email, allow resetting password
    elif not p.has_password:
        pass  # user doesn't have a password yet, allow adding one
    else:
        p2 = Participant.authenticate_with_password(
            p.id, body['cur-password'], context='change_password'
        )
        if not p2:
            raise response.error(403, _("Incorrect password"))
        del p2

    # Check the new password
    password_status = None
    ignore_warning = body.get('ignore_warning') == 'true'
    if not ignore_warning:
        website.db.hit_rate_limit('check_password', p.id, TooManyAttempts)
        try:
            password_status = p.check_password(body['new-password'], context='update_password')
        except Exception as e:
            website.tell_sentry(e)
        if password_status and password_status != 'okay':
            raise response.render(
                'simplates/password-warning.spt', state,
                password_status=password_status, back_to=p.path('settings'),
            )

    # Update the password
    website.db.hit_rate_limit('change_password', p.id, TooManyAttempts)
    checked = password_status is not None or ignore_warning
    p.update_password(body['new-password'], checked=checked)
    form_post_success(state, msg=_("Your password has been changed."))

elif 'visibility' in body:
    response.redirect(p.path('edit/visibility'), code=307)

elif 'username' in body:
    response.redirect(p.path('edit/username'), code=307)

elif 'main_currency' in body:
    response.redirect(p.path('edit/currencies'), code=307)

else:
    raise response.error(400, "no known key found in body")

[---] text/html
