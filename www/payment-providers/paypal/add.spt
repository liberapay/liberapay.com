from liberapay.exceptions import LoginRequired

[---]

participant = user

if user.ANON:
    raise LoginRequired

if request.method == 'POST':
    body = request.body
    country = body['country']
    if country not in locale.countries:
        raise response.invalid_input(country, 'country', 'body')
    email_address = body['email']
    email = participant.get_email(email_address)
    if not (email and email.verified):
        participant.add_email(email_address)
    account_data = dict(
        p_id=participant.id, country=country, account_id=email_address,
        verified=bool(getattr(email, 'verified', None))
    )
    with website.db.get_cursor() as cursor:
        cursor.run("""
            UPDATE payment_accounts
               SET is_current = NULL
             WHERE participant = %(p_id)s
               AND provider = 'paypal'
               AND country = %(country)s;

            INSERT INTO payment_accounts
                        (participant, provider, country, id, verified)
                 VALUES (%(p_id)s, 'paypal', %(country)s, %(account_id)s, %(verified)s)
            ON CONFLICT (provider, id, participant) DO UPDATE
                    SET is_current = true
                      , country = excluded.country
                      , default_currency = excluded.default_currency
                      , charges_enabled = excluded.charges_enabled
                      , display_name = excluded.display_name
                      , token = excluded.token;
        """, account_data)
    response.redirect(participant.path('payment'))

title = _("Connecting a {platform} account", platform='PayPal')

[---] text/html
% from "templates/icons.html" import glyphicon

% extends "templates/base-thin.html"

% block thin_content

<form action="" method="POST">
    <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
    <p>{{ _("Please input the email address and country of the PayPal account you want to connect:") }}</p>
    <div class="form-group block-labels">
    <label>
        <span>{{ _("Email") }}</span>
        <input class="form-control" name="email" value="{{ participant.email or '' }}" required />
        <div class="help-block">{{ _(
            "A confirmation code will be sent to this email address, unless it's "
            "already linked to your Liberapay account."
        ) }}</div>
        <div class="text-warning">{{ glyphicon('warning-sign') }} {{ _(
            "PayPal payments are currently not anonymous, donors will see your "
            "email address, and you will see theirs."
        ) }}</div>
    </label>
    <label>
        <span>{{ _("Country") }}</span>
        <select name="country" class="form-control" required>
            <option></option>
        % for code, name in locale.countries.items()
            <option value="{{ code }}" {{ 'selected' if code == request.country }}>{{ name }}</option>
        % endfor
        </select>
    </label>
    </div>
    <button class="btn btn-primary">{{ _("Proceed") }}</button>
</form>

% endblock
