#!/bin/bash -eu

function is_okay() {
    echo "Checking that the homepage returns a 200..."
    for i in {1..3}; do
        http_code=$(
            curl -I "http://$OPENSHIFT_PYTHON_IP:$OPENSHIFT_PYTHON_PORT/" \
                 -H 'Host: liberapay.com' -H 'X-Forwarded-Proto: https' \
                 -o /dev/null -w '%{http_code}' 2>/dev/null
        )
        echo "Got a $http_code"
        [ "$http_code" != "200" ] || return 0
        sleep 1s
    done
    return 1
}

# http://docs.gunicorn.org/en/stable/signals.html
pid_file="$OPENSHIFT_DATA_DIR/gunicorn.pid"
function _get_pid() {
    i="$(cat "$1" || true)"
    if [ ! -z "$i" ] && [ -d "/proc/$i" ]; then echo -n "$i"; fi
}
function get_pid() { _get_pid "$pid_file"; }
function get_pid2() { _get_pid "${pid_file}.2"; }
pid=$(get_pid)
if [ ! -z "$pid" ]; then
    echo "Gracefully restarting gunicorn..."
    kill -s SIGUSR2 "$pid"
    sleep 1
    if [ -z "$(get_pid2)" ]; then sleep 9; fi
    new_pid="$(get_pid2)"
    if [ -z "$new_pid" ] || [ "$new_pid" = "$pid" ]; then
        echo "Gunicorn has failed to start a new process, you need to fix that!"
    else
        echo "Shutting down old workers..."
        kill -s SIGWINCH "$pid"
        sleep 3
        if is_okay; then
            echo "All good, sending SIGTERM to the old master..."
            kill -s SIGTERM "$pid"
        else
            echo "THE SITE IS DOWN!!!"
            echo "Sending SIGTERM to the new master..."
            kill -s SIGTERM "$new_pid"
            rm "$pid_file" || true
            echo "Attempting to restart workers from the old master..."
            kill -s SIGHUP "$pid"
            sleep 1
            if ! is_okay; then
                echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
                echo "!!!THE SITE IS STILL DOWN, FIX THAT RIGHT NOW!!!"
                echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            else
                echo "The site is back, but deployment failed, go fix that!"
            fi
        fi
    fi
fi
