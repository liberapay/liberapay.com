from __future__ import absolute_import, division, print_function, unicode_literals

from pando.http import status_strings

from liberapay.exceptions import LazyResponse
from liberapay.utils.i18n import HTTP_ERRORS

[----------------------------------------]

sentry_ident = state.get('sentry_ident')
code = response.code
msg = _(HTTP_ERRORS.get(code, status_strings.get(code, '')))
try:
    assert msg
except Exception as e:
    website.tell_sentry(e, state)

if isinstance(response, LazyResponse):
    response.render_body(state)
err = response.text
if code == 500 and not err:
    err = _("Looks like you've found a bug. It 
will be fixed as soon as possible.")
[----------------------------------------] text/html
% extends "templates/base.html"

% set title = '' if response.html_template else code

% block content
    % if response.html_template
        % include response.html_template
    % else
        <p>{{ msg }}</p>
        % if website.show_tracebacks
        <pre>{{ err }}</pre>
        % else
        <div class="alert alert-danger">{{ err }}</div>
        % endif
        % if sentry_ident
            <p>{{ _(
                "Details of this error has been recorded. In contacting Liberapay about it, "
                "please include the following error identification code in your message: {0}.",
                '<code>%s</code>'|safe % sentry_ident
            ) }}</p>
        % endif
    % endif
% endblock
[----------------------------------------] application/json via json_dump
{ "error_code": code
, "error_message_short": msg
, "error_message_long": err
, "error_id": sentry_ident
 }
[----------------------------------------] text/plain
{{err or msg}}
